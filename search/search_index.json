{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is ConFindr? ConFindr is a pipeline that can detect contamination in bacterial NGS data, both between and within species. It can do this with pretty darn good sensitivity - two samples mixed together with as few as 500 SNPs between them (> 99.9 percent identity!) can be identified. This allows for stringent quality control of NGS samples. How Does ConFindr Work? ConFindr works by looking at conserved core genes - either using rMLST genes (53 genes are known to be single copy and conserved across all bacteria with some known exceptions, which ConFindr handles), or custom sets of genes derived from core-genome schemes. As the genes ConFindr looks at are single copy, any sample that has multiple alleles of one or more gene is likely to be contaminated. To identify the presence of multiple alleles in a sample, the following workflow is followed: Use Mash to determine the genus of each sample so that genus-specific databases can be constructed and check for interspecies contamination. Perform stringent quality trimming and bait out reads that contain rMLST gene sequence, using BBDuk. Align reads back to the rMLST genes. Look at the alignment to find Contaminating SNVs - those that have sites where more than one base is present, indicating that multiple alleles are present, indicating contamination. Limits of Detection Intraspecies The limit of detection for ConFindr is going to be a function of several factors, so it's hard to give exact information on what can and can't be detected. However, here are a few guidelines: Two strains with identical rMLST genes won't ever have contamination detected between them. ConFindr has a cutoff of finding 3 Contaminating SNVs found for calling a sample as contaminated, as there will occasionally be 1 false positive, and very rarely 2 false positive sites. In practice, this still lets you detect contamination essentially whenever two strains have different rMLST types, as >99 percent of types have at least 3 SNPs between them in E. coli , S. enterica , and L. monocytogenes . I haven't looked at other species in detail, but this very likely holds true for them too. The degree of contamination matters: things with very low levels of contamination (around 1 percent) probably won't ever be picked up under default parameters. Once you hit 5 percent contamination, whether or not it gets detected is a function of sequencing depth and distance between species. Sequencing depth matters: Contaminating SNVs are found more reliably the more depth you have. ConFindr seems to work pretty well once you hit 40X or 50X, but trying to run it on a sample with only 10X coverage is unlikely to ever find anything (unless default parameters get changed) Relatedness of the contaminant strain is the the final major factor - with something very closely related to the strain you actually want, picking up contamination at 5 percent will be pretty difficult. The below graph shows the magnitude of contamination detected for several synthetic datasets in Escherichia coli . Strains were mixed together that were either identical (and so should have no contamination), not identical but have the same rMLST type (and so are contaminated, but beyond the limit of detection), two strains with the same serotype, and therefore very closely related, or two strains of differing serotypes. The black line on the graph represents our cutoff for contaminated samples - any sample with a magnitude above that can reliably be called contaminated. As can be seen, two different serotypes from the same species are reliably detected at contamination levels of 5 percent or higher, two strains of the same serotype are often detected at 10 percent contamination and almost always at 20 percent contamination, and two strains that have the same rMLST or are identical never have contamination detected. Results should be very similar for other species. Interspecies ConFindr seems to reliably be able to detect interspecies contamination at levels of 5 percent or above, but its checks for interspecies contamination are not particularly rigorous. If you're very worried about interspecies contamination, it would be a good idea to put your samples through some sort of metagenomics software (such as Kraken or Kaiju). Feedback If you run into any issues installing or running ConFindr, have feature requests, want some help interpreting results, or anything else, feel free to open an issue on GitHub or send me an email at adam.koziol@canada.ca .","title":"Home"},{"location":"#what-is-confindr","text":"ConFindr is a pipeline that can detect contamination in bacterial NGS data, both between and within species. It can do this with pretty darn good sensitivity - two samples mixed together with as few as 500 SNPs between them (> 99.9 percent identity!) can be identified. This allows for stringent quality control of NGS samples.","title":"What is ConFindr?"},{"location":"#how-does-confindr-work","text":"ConFindr works by looking at conserved core genes - either using rMLST genes (53 genes are known to be single copy and conserved across all bacteria with some known exceptions, which ConFindr handles), or custom sets of genes derived from core-genome schemes. As the genes ConFindr looks at are single copy, any sample that has multiple alleles of one or more gene is likely to be contaminated. To identify the presence of multiple alleles in a sample, the following workflow is followed: Use Mash to determine the genus of each sample so that genus-specific databases can be constructed and check for interspecies contamination. Perform stringent quality trimming and bait out reads that contain rMLST gene sequence, using BBDuk. Align reads back to the rMLST genes. Look at the alignment to find Contaminating SNVs - those that have sites where more than one base is present, indicating that multiple alleles are present, indicating contamination.","title":"How Does ConFindr Work?"},{"location":"#limits-of-detection","text":"","title":"Limits of Detection"},{"location":"#intraspecies","text":"The limit of detection for ConFindr is going to be a function of several factors, so it's hard to give exact information on what can and can't be detected. However, here are a few guidelines: Two strains with identical rMLST genes won't ever have contamination detected between them. ConFindr has a cutoff of finding 3 Contaminating SNVs found for calling a sample as contaminated, as there will occasionally be 1 false positive, and very rarely 2 false positive sites. In practice, this still lets you detect contamination essentially whenever two strains have different rMLST types, as >99 percent of types have at least 3 SNPs between them in E. coli , S. enterica , and L. monocytogenes . I haven't looked at other species in detail, but this very likely holds true for them too. The degree of contamination matters: things with very low levels of contamination (around 1 percent) probably won't ever be picked up under default parameters. Once you hit 5 percent contamination, whether or not it gets detected is a function of sequencing depth and distance between species. Sequencing depth matters: Contaminating SNVs are found more reliably the more depth you have. ConFindr seems to work pretty well once you hit 40X or 50X, but trying to run it on a sample with only 10X coverage is unlikely to ever find anything (unless default parameters get changed) Relatedness of the contaminant strain is the the final major factor - with something very closely related to the strain you actually want, picking up contamination at 5 percent will be pretty difficult. The below graph shows the magnitude of contamination detected for several synthetic datasets in Escherichia coli . Strains were mixed together that were either identical (and so should have no contamination), not identical but have the same rMLST type (and so are contaminated, but beyond the limit of detection), two strains with the same serotype, and therefore very closely related, or two strains of differing serotypes. The black line on the graph represents our cutoff for contaminated samples - any sample with a magnitude above that can reliably be called contaminated. As can be seen, two different serotypes from the same species are reliably detected at contamination levels of 5 percent or higher, two strains of the same serotype are often detected at 10 percent contamination and almost always at 20 percent contamination, and two strains that have the same rMLST or are identical never have contamination detected. Results should be very similar for other species.","title":"Intraspecies"},{"location":"#interspecies","text":"ConFindr seems to reliably be able to detect interspecies contamination at levels of 5 percent or above, but its checks for interspecies contamination are not particularly rigorous. If you're very worried about interspecies contamination, it would be a good idea to put your samples through some sort of metagenomics software (such as Kraken or Kaiju).","title":"Interspecies"},{"location":"#feedback","text":"If you run into any issues installing or running ConFindr, have feature requests, want some help interpreting results, or anything else, feel free to open an issue on GitHub or send me an email at adam.koziol@canada.ca .","title":"Feedback"},{"location":"install/","text":"System Requirements ConFindr has been tested with Debian-based Linux systems, but should in principle work on any flavour of Linux, as well as MacOSX. Windows isn't supported, but it may very well be installable via bioconda. If you have any success running ConFindr on a Windows machine, let me know! ConFindr should run on any regular desktop/laptop with 8 GB or RAM or more. Downloading ConFindr Databases As of ConFindr 0.7.0, databases for detecting contamination in Escherichia , Listeria , and Salmonella derived from core-gene schemes are freely available and will be automatically downloaded by ConFindr when it runs. If you only want to run ConFindr on these three genera, nothing further is necessary. If you want to run ConFindr on any other genera, keep reading on how to get access to the necessary databases. ConFindr uses the ribosomal multi-locus sequence typing (rMLST) scheme to detect contamination in genera other than the ones listed above. These databases are freely available, but you will need to jump through a few hoops before you can get access to them due to an associated licence agreement . Here are the steps to getting databases downloaded: Register for a PubMLST account if you do not already have one. Link to register is here . Click on Register for a site-wide account. Login to your account at https://pubmlst.org/bigsdb and request access to Ribosomal MLST genome and Ribosomal MLST locus/sequence definitions under Registrations . Additionally, email Keith Jolley (keith.jolley@zoo.ox.ac.uk) and request a consumer key and consumer secret so that you'll be able to access the database programatically. Once you've gotten your consumer key and consumer secret from Keith, put them into a text file with the key on the first line and the secret on the second. It should look something like the below snippet: efKXmqp2D0EBlMBkZaGC2lPf F$M+fQ2AFFB2YBDfF9fpHF^qSWJdmmN%L4Fxf5Gur3 Install ConFindr as shown in the next section. With ConFindr installed, use the command confindr_database_setup to have ConFindr download the latest version of the rMLST databases. This script takes two arguments - a -s where you give the path to the text file containing your consumer key and secret, and a -o to specify where you want the sequences downloaded. Only the -s is mandatory. If your output directory is not specified, ConFindr will first search for an environmental variable called CONFINDR_DB , and if it can't find that it will automatically download to a folder called .confindr_db in your home directory. Installing Using Conda (Recommended) ConFindr is available within bioconda - to get bioconda installed and running see instructions here . With bioconda running, you can install ConFindr with the following command: conda install -c bioconda confindr With that done, typing confindr.py will bring access the ConFindr pipeline. See the Usage section for instructions on how to use ConFindr, including a ConFindr run on an example dataset. Manual Install Executable ConFindr can also be installed using pip. Use of a virtual environment for ConFindr is highly recommended. To create a virtualenv: Create an empty directory (i.e. mkdir ~/Virtual_Environments/ConFindr ) Virtualenv that directory ( virtualenv -p /usr/bin/python3 ~/Virtual_Environments/ConFindr ) Activate the virtualenv ( source ~/Virtual_Environments/ConFindr/bin/activate ) Install ConFindr - this should also install any packages that ConFindr depends on ( pip install confindr ) With this done, you'll need to make sure that any necessary dependencies are installed. Dependencies Before using ConFindr, you'll need to download and add the following programs to your $PATH: BBTools (>=37.23) Mash (>=2.0) KMA (>=1.2.0) Python (>=3.5) If you want to run in Nanopore mode, you'll also need to get minimap2 . Instructions on adding programs to your $PATH can be found here . If ConFindr can't find these dependencies when you try to run it, you will see an error message and the program will quit.","title":"Installation"},{"location":"install/#system-requirements","text":"ConFindr has been tested with Debian-based Linux systems, but should in principle work on any flavour of Linux, as well as MacOSX. Windows isn't supported, but it may very well be installable via bioconda. If you have any success running ConFindr on a Windows machine, let me know! ConFindr should run on any regular desktop/laptop with 8 GB or RAM or more.","title":"System Requirements"},{"location":"install/#downloading-confindr-databases","text":"As of ConFindr 0.7.0, databases for detecting contamination in Escherichia , Listeria , and Salmonella derived from core-gene schemes are freely available and will be automatically downloaded by ConFindr when it runs. If you only want to run ConFindr on these three genera, nothing further is necessary. If you want to run ConFindr on any other genera, keep reading on how to get access to the necessary databases. ConFindr uses the ribosomal multi-locus sequence typing (rMLST) scheme to detect contamination in genera other than the ones listed above. These databases are freely available, but you will need to jump through a few hoops before you can get access to them due to an associated licence agreement . Here are the steps to getting databases downloaded: Register for a PubMLST account if you do not already have one. Link to register is here . Click on Register for a site-wide account. Login to your account at https://pubmlst.org/bigsdb and request access to Ribosomal MLST genome and Ribosomal MLST locus/sequence definitions under Registrations . Additionally, email Keith Jolley (keith.jolley@zoo.ox.ac.uk) and request a consumer key and consumer secret so that you'll be able to access the database programatically. Once you've gotten your consumer key and consumer secret from Keith, put them into a text file with the key on the first line and the secret on the second. It should look something like the below snippet: efKXmqp2D0EBlMBkZaGC2lPf F$M+fQ2AFFB2YBDfF9fpHF^qSWJdmmN%L4Fxf5Gur3 Install ConFindr as shown in the next section. With ConFindr installed, use the command confindr_database_setup to have ConFindr download the latest version of the rMLST databases. This script takes two arguments - a -s where you give the path to the text file containing your consumer key and secret, and a -o to specify where you want the sequences downloaded. Only the -s is mandatory. If your output directory is not specified, ConFindr will first search for an environmental variable called CONFINDR_DB , and if it can't find that it will automatically download to a folder called .confindr_db in your home directory.","title":"Downloading ConFindr Databases"},{"location":"install/#installing-using-conda-recommended","text":"ConFindr is available within bioconda - to get bioconda installed and running see instructions here . With bioconda running, you can install ConFindr with the following command: conda install -c bioconda confindr With that done, typing confindr.py will bring access the ConFindr pipeline. See the Usage section for instructions on how to use ConFindr, including a ConFindr run on an example dataset.","title":"Installing Using Conda (Recommended)"},{"location":"install/#manual-install","text":"","title":"Manual Install"},{"location":"install/#executable","text":"ConFindr can also be installed using pip. Use of a virtual environment for ConFindr is highly recommended. To create a virtualenv: Create an empty directory (i.e. mkdir ~/Virtual_Environments/ConFindr ) Virtualenv that directory ( virtualenv -p /usr/bin/python3 ~/Virtual_Environments/ConFindr ) Activate the virtualenv ( source ~/Virtual_Environments/ConFindr/bin/activate ) Install ConFindr - this should also install any packages that ConFindr depends on ( pip install confindr ) With this done, you'll need to make sure that any necessary dependencies are installed.","title":"Executable"},{"location":"install/#dependencies","text":"Before using ConFindr, you'll need to download and add the following programs to your $PATH: BBTools (>=37.23) Mash (>=2.0) KMA (>=1.2.0) Python (>=3.5) If you want to run in Nanopore mode, you'll also need to get minimap2 . Instructions on adding programs to your $PATH can be found here . If ConFindr can't find these dependencies when you try to run it, you will see an error message and the program will quit.","title":"Dependencies"},{"location":"usage/","text":"Example Dataset An example dataset has been uploaded to FigShare. You can download it to your current working directory with the following command: wget https://ndownloader.figshare.com/files/9972709 && tar xf 9972709 This example dataset contains two different serotypes of Escherichia coli mixed together - it's about 80/20 split of O103 and O157. Contamination like this is difficult to detect with regular tools - it's possible to pick up that it's two different strains, but it can be finicky. ConFindr, however, has no difficulty picking up the fact that this sample is contaminated. In order to have ConFindr analyze this sample, the parameters you need to provide are: -i, --input_directory : The path to a directory containing the reads, in FASTQ format, that you want analyzed. If you're using the example dataset, you'll want to enter example-data -o, --output_name : The base name for your output. If you put output for this parameter, a folder called output will be created, and a file called confindr_report.csv with contamination information will be created in this folder So, if the example-data folder were downloaded to your current working directory and you want to have an output folder called output , the command to run ConFindr would be: confindr.py -i example-data -o output You can use absolute or relative paths, and trailing slashes are also acceptable for the directories specified. If ConFindr is properly installed, you should see something similar to the following appear on your terminal: 2019-04-02 15:06:04 Welcome to ConFindr 0.7.0! Beginning analysis of your samples... 2019-04-02 15:06:04 Could not find Escherichia_db_cgderived.fasta 2019-04-02 15:06:04 Could not find Listeria_db_cgderived.fasta 2019-04-02 15:06:04 Could not find Salmonella_db_cgderived.fasta 2019-04-02 15:06:04 Could not find refseq.msh 2019-04-02 15:06:04 Databases not present - downloading basic databases now... 2019-04-02 15:06:04 Downloading mash refseq sketch... 2019-04-02 15:06:07 Downloading cgMLST-derived data for Escherichia, Salmonella, and Listeria... 2019-04-02 15:06:12 Did not find rMLST databases, if you want to use ConFindr on genera other than Listeria, Salmonella, and Escherichia, you'll need to download them. Instructions are available at https://olc-bioinformatics.github.io/ConFindr/install/#downloading-confindr-databases 2019-04-02 15:06:12 Beginning analysis of sample example... 2019-04-02 15:06:12 Checking for cross-species contamination... 2019-04-02 15:06:29 Extracting conserved core genes... 2019-04-02 15:06:37 Quality trimming... 2019-04-02 15:06:38 Detecting contamination... 2019-04-02 15:07:05 Done! Number of contaminating SNVs found: 214 2019-04-02 15:07:05 Contamination detection complete! The run shouldn't take too long - depending on how powerful your machine is, it should be done in one to two minutes (slightly longer if an Escherichia specific database has not yet been set up). Once the run is done, you'll be able to inspect your results. Take a look at output/confindr_report.csv : The ContamStatus column should read True , and the NumContamSNVs column should have a value of something close to 200. In any future uses of ConFindr, databases will not need to be re-downloaded. Interpreting ConFindr Results The results file that ConFindr produces is in comma-separated value (CSV) format, which can be opened by any spreadsheet application (Excel, LibreOffice, etc.) or your favorite text editor. The file has the following headers: Sample , Genus , NumContamSNVs , ContamStatus , PercentContam , PercentContamStandardDeviation , and BasesExamined . Of these, ContamStatus is the most important - it will be True if a sample is contaminated, and False if a sample is not contaminated. Detailed descriptions of each header follow. Sample : The name of the sample. ConFindr will take everything before the first underscore (_) character to be the name of the sample, as done with samples coming from an Illumina MiSeq. Genus : The genus that ConFindr thinks your sample is. If ConFindr couldn't figure out what genus your sample is from, this will be NA. If multiple genera were found, they will all be listed here, separated by a : NumContamSNVs : The number of times ConFindr found sites with more than one base present. ContamStatus : The most important of all! Will read True if contamination is present in the sample, and False if contamination is not present. The result will be True if any of the following conditions are met: More than 1 contaminating SNV per 10000 base pairs examined was found. There is cross contamination between genera. PercentContam : Based on the depth of the minor variant for sites with multiple bases, ConFindr guesses at what percent of your reads come from a contaminant. The more sequencing depth you have, the more accurate this will get. For lower levels of contamination (around 5 percent) this tends to get overestimated, but the number gets more accurate as contamination level increases, as well as sequencing depth. PercentContamStandardDeviation : The standard deviation of the percentage contamination estimate. Very high values may indicate something strange is going on. BasesExamined : The number of bases ConFindr examined when making the contamination call. Will usally be around 20kb for rMLST databases, and will vary when other databases are used. DatabaseDownloadDate : Date that rMLST databases were downloaded, if you have them. As these are curated and updated regularly, it's a good idea to re-run confindr_database_setup every now and then. ConFindr will also produce two CSV files for each sample - one called samplename_contamination.csv , which shows the contaminating sites, and one called samplename_rmlst.csv , which shows ConFindr's guess at which allele is present for each rMLST gene. Using ConFindr in a Python Script In the event you'd rather integrate ConFindr into a script than run from the command line, here's how: from confindr_src import confindr # Find read files. paired_reads = confindr.find_paired_reads('path_to_fastq_folder', forward_id='_R1', reverse_id='_R2') # Run confindr. This assumes that you have already downloaded the databases. If you haven't, # you can run confindr.check_for_databases_and_download(database_location='path/where/you/want/to/download, tmpdir='a/tmp/dir') for pair in paired_reads: confindr.find_contamination(pair=pair, forward_id='_R1', # change if yours is different threads=4, output_folder='path/to/output', databases_folder='path/to/databases') Using Schemes other than rMLST As of ConFindr 0.4.4, ConFindr has the option to use a cgMLST scheme instead of an rMLST scheme for increased contamination detection sensitivity. This hasn't been tested extensively, but looks to be working. Runtime is increased by a factor of 2 or 3 compared to running against rMLST genes. To use this option, you'll need a a cgMLST FASTA file - all FASTA headers should be in format >genename_allele In order to decrease computation time, clustering the cgMLST FASTA before running is recommended. CD-HIT on default parameters does this fairly well. cgMLST files that are already clustered are available for Salmonella and Escherichia . To get them: Escherichia: wget 'https://scist01.blob.core.windows.net/olc/Escherichia_cgmlst.fasta?sp=r&st=2020-07-15T13:17:25Z&se=2029-07-15T21:17:25Z&spr=https&sv=2019-10-10&sr=b&sig=zF01kDCgmsmBWJ0cSpyfYi6CLldIjalwU2RgsswKmmI%3D' -O Escherichia_cgmlst.fasta Salmonella: wget 'https://scist01.blob.core.windows.net/olc/Salmonella_cgmlst.fasta?sp=r&st=2020-07-15T13:13:16Z&se=2029-07-15T21:13:16Z&spr=https&sv=2019-10-10&sr=b&sig=ncG%2F5MzKt57p1BUdyFtnhJUk9Yfi6x3rFhSQWPlT2Ek%3D' -O Salmonella_cgmlst.fasta When using a cgMLST database, ConFindr will use the provided scheme for all samples regardless of genus. Actually calling ConFindr with cgMLST: confindr.py -i folder-with-Escherichia-files -o cgmlst-output -cgmlst /path/to/Escherichia_cgmlst.fasta Optional Arguments ConFindr has a few optional arguments that allow you to modify its other parameters. Optional arguments are: -t, --threads : The number of threads to run ConFindr analysis with. The default is to use all threads available on your machine, and ConFindr scales very well with more threads, so it's recommended that this option be left at the default unless you need the computational resources for something else. -d , --databases`: Path to ConFindr databases. These will be downloaded automatically if not present. -k , --keep_files`: Set this flag to keep intermediate files. Useful if you want to do manual inspection of the BAM files that ConFindr creates, which are deleted by default. -fid, --forward_id : The identifier for forward reads in your input FASTQ folder. By default, this is _R1 . If you follow a different naming scheme, this is the parameter to change. -rid, --reverse_id : The identifier for reverse reads in your input FASTQ folder. By default, this is _R2 . If you follow a different naming scheme, this is the parameter to change. -v, --version : Display ConFindr version and exit. -verbosity, --verbosity : How much you want printed to the screen. Choose debug to get some extra, or warning to get almost nothing. Default is info . -b , --base_cutoff : The number of high-quality bases needed to call a site as multiallelic, and therefore contributing to contamination. Defaults to 2, which is usually sensitive without producing false positives. If dealing with high depth samples, adding the -bf parameter set to around 0.05 is likely to be helpful in reducing false positives. -bf , --base_fraction_cutoff : The proportion of high-quality bases needed to call a site as multiallelic, and therefore contributing to contamination. Must be between 0 and 1. Not used by default. -q , --quality_cutoff : The phred score a base needs to have before it's considered trustworthy enough to contribute to a site being multiallelic. Defaults to 20, which should be suitable for most purposes. --rmlst : By default, ConFindr will use custom core-gene derived datasets for Escherichia , Listeria , and Salmonella instead of rMLST. Activate this flag to force use of rMLST genes for all genera. --cross_details : By default, when ConFindr finds cross-contaminated samples it stops analysis. Activate this flag to have analysis of number of cSNVs continue in order to get an estimate of percentage contamination.","title":"Usage"},{"location":"usage/#example-dataset","text":"An example dataset has been uploaded to FigShare. You can download it to your current working directory with the following command: wget https://ndownloader.figshare.com/files/9972709 && tar xf 9972709 This example dataset contains two different serotypes of Escherichia coli mixed together - it's about 80/20 split of O103 and O157. Contamination like this is difficult to detect with regular tools - it's possible to pick up that it's two different strains, but it can be finicky. ConFindr, however, has no difficulty picking up the fact that this sample is contaminated. In order to have ConFindr analyze this sample, the parameters you need to provide are: -i, --input_directory : The path to a directory containing the reads, in FASTQ format, that you want analyzed. If you're using the example dataset, you'll want to enter example-data -o, --output_name : The base name for your output. If you put output for this parameter, a folder called output will be created, and a file called confindr_report.csv with contamination information will be created in this folder So, if the example-data folder were downloaded to your current working directory and you want to have an output folder called output , the command to run ConFindr would be: confindr.py -i example-data -o output You can use absolute or relative paths, and trailing slashes are also acceptable for the directories specified. If ConFindr is properly installed, you should see something similar to the following appear on your terminal: 2019-04-02 15:06:04 Welcome to ConFindr 0.7.0! Beginning analysis of your samples... 2019-04-02 15:06:04 Could not find Escherichia_db_cgderived.fasta 2019-04-02 15:06:04 Could not find Listeria_db_cgderived.fasta 2019-04-02 15:06:04 Could not find Salmonella_db_cgderived.fasta 2019-04-02 15:06:04 Could not find refseq.msh 2019-04-02 15:06:04 Databases not present - downloading basic databases now... 2019-04-02 15:06:04 Downloading mash refseq sketch... 2019-04-02 15:06:07 Downloading cgMLST-derived data for Escherichia, Salmonella, and Listeria... 2019-04-02 15:06:12 Did not find rMLST databases, if you want to use ConFindr on genera other than Listeria, Salmonella, and Escherichia, you'll need to download them. Instructions are available at https://olc-bioinformatics.github.io/ConFindr/install/#downloading-confindr-databases 2019-04-02 15:06:12 Beginning analysis of sample example... 2019-04-02 15:06:12 Checking for cross-species contamination... 2019-04-02 15:06:29 Extracting conserved core genes... 2019-04-02 15:06:37 Quality trimming... 2019-04-02 15:06:38 Detecting contamination... 2019-04-02 15:07:05 Done! Number of contaminating SNVs found: 214 2019-04-02 15:07:05 Contamination detection complete! The run shouldn't take too long - depending on how powerful your machine is, it should be done in one to two minutes (slightly longer if an Escherichia specific database has not yet been set up). Once the run is done, you'll be able to inspect your results. Take a look at output/confindr_report.csv : The ContamStatus column should read True , and the NumContamSNVs column should have a value of something close to 200. In any future uses of ConFindr, databases will not need to be re-downloaded.","title":"Example Dataset"},{"location":"usage/#interpreting-confindr-results","text":"The results file that ConFindr produces is in comma-separated value (CSV) format, which can be opened by any spreadsheet application (Excel, LibreOffice, etc.) or your favorite text editor. The file has the following headers: Sample , Genus , NumContamSNVs , ContamStatus , PercentContam , PercentContamStandardDeviation , and BasesExamined . Of these, ContamStatus is the most important - it will be True if a sample is contaminated, and False if a sample is not contaminated. Detailed descriptions of each header follow. Sample : The name of the sample. ConFindr will take everything before the first underscore (_) character to be the name of the sample, as done with samples coming from an Illumina MiSeq. Genus : The genus that ConFindr thinks your sample is. If ConFindr couldn't figure out what genus your sample is from, this will be NA. If multiple genera were found, they will all be listed here, separated by a : NumContamSNVs : The number of times ConFindr found sites with more than one base present. ContamStatus : The most important of all! Will read True if contamination is present in the sample, and False if contamination is not present. The result will be True if any of the following conditions are met: More than 1 contaminating SNV per 10000 base pairs examined was found. There is cross contamination between genera. PercentContam : Based on the depth of the minor variant for sites with multiple bases, ConFindr guesses at what percent of your reads come from a contaminant. The more sequencing depth you have, the more accurate this will get. For lower levels of contamination (around 5 percent) this tends to get overestimated, but the number gets more accurate as contamination level increases, as well as sequencing depth. PercentContamStandardDeviation : The standard deviation of the percentage contamination estimate. Very high values may indicate something strange is going on. BasesExamined : The number of bases ConFindr examined when making the contamination call. Will usally be around 20kb for rMLST databases, and will vary when other databases are used. DatabaseDownloadDate : Date that rMLST databases were downloaded, if you have them. As these are curated and updated regularly, it's a good idea to re-run confindr_database_setup every now and then. ConFindr will also produce two CSV files for each sample - one called samplename_contamination.csv , which shows the contaminating sites, and one called samplename_rmlst.csv , which shows ConFindr's guess at which allele is present for each rMLST gene.","title":"Interpreting ConFindr Results"},{"location":"usage/#using-confindr-in-a-python-script","text":"In the event you'd rather integrate ConFindr into a script than run from the command line, here's how: from confindr_src import confindr # Find read files. paired_reads = confindr.find_paired_reads('path_to_fastq_folder', forward_id='_R1', reverse_id='_R2') # Run confindr. This assumes that you have already downloaded the databases. If you haven't, # you can run confindr.check_for_databases_and_download(database_location='path/where/you/want/to/download, tmpdir='a/tmp/dir') for pair in paired_reads: confindr.find_contamination(pair=pair, forward_id='_R1', # change if yours is different threads=4, output_folder='path/to/output', databases_folder='path/to/databases')","title":"Using ConFindr in a Python Script"},{"location":"usage/#using-schemes-other-than-rmlst","text":"As of ConFindr 0.4.4, ConFindr has the option to use a cgMLST scheme instead of an rMLST scheme for increased contamination detection sensitivity. This hasn't been tested extensively, but looks to be working. Runtime is increased by a factor of 2 or 3 compared to running against rMLST genes. To use this option, you'll need a a cgMLST FASTA file - all FASTA headers should be in format >genename_allele In order to decrease computation time, clustering the cgMLST FASTA before running is recommended. CD-HIT on default parameters does this fairly well. cgMLST files that are already clustered are available for Salmonella and Escherichia . To get them: Escherichia: wget 'https://scist01.blob.core.windows.net/olc/Escherichia_cgmlst.fasta?sp=r&st=2020-07-15T13:17:25Z&se=2029-07-15T21:17:25Z&spr=https&sv=2019-10-10&sr=b&sig=zF01kDCgmsmBWJ0cSpyfYi6CLldIjalwU2RgsswKmmI%3D' -O Escherichia_cgmlst.fasta Salmonella: wget 'https://scist01.blob.core.windows.net/olc/Salmonella_cgmlst.fasta?sp=r&st=2020-07-15T13:13:16Z&se=2029-07-15T21:13:16Z&spr=https&sv=2019-10-10&sr=b&sig=ncG%2F5MzKt57p1BUdyFtnhJUk9Yfi6x3rFhSQWPlT2Ek%3D' -O Salmonella_cgmlst.fasta When using a cgMLST database, ConFindr will use the provided scheme for all samples regardless of genus. Actually calling ConFindr with cgMLST: confindr.py -i folder-with-Escherichia-files -o cgmlst-output -cgmlst /path/to/Escherichia_cgmlst.fasta","title":"Using Schemes other than rMLST"},{"location":"usage/#optional-arguments","text":"ConFindr has a few optional arguments that allow you to modify its other parameters. Optional arguments are: -t, --threads : The number of threads to run ConFindr analysis with. The default is to use all threads available on your machine, and ConFindr scales very well with more threads, so it's recommended that this option be left at the default unless you need the computational resources for something else. -d , --databases`: Path to ConFindr databases. These will be downloaded automatically if not present. -k , --keep_files`: Set this flag to keep intermediate files. Useful if you want to do manual inspection of the BAM files that ConFindr creates, which are deleted by default. -fid, --forward_id : The identifier for forward reads in your input FASTQ folder. By default, this is _R1 . If you follow a different naming scheme, this is the parameter to change. -rid, --reverse_id : The identifier for reverse reads in your input FASTQ folder. By default, this is _R2 . If you follow a different naming scheme, this is the parameter to change. -v, --version : Display ConFindr version and exit. -verbosity, --verbosity : How much you want printed to the screen. Choose debug to get some extra, or warning to get almost nothing. Default is info . -b , --base_cutoff : The number of high-quality bases needed to call a site as multiallelic, and therefore contributing to contamination. Defaults to 2, which is usually sensitive without producing false positives. If dealing with high depth samples, adding the -bf parameter set to around 0.05 is likely to be helpful in reducing false positives. -bf , --base_fraction_cutoff : The proportion of high-quality bases needed to call a site as multiallelic, and therefore contributing to contamination. Must be between 0 and 1. Not used by default. -q , --quality_cutoff : The phred score a base needs to have before it's considered trustworthy enough to contribute to a site being multiallelic. Defaults to 20, which should be suitable for most purposes. --rmlst : By default, ConFindr will use custom core-gene derived datasets for Escherichia , Listeria , and Salmonella instead of rMLST. Activate this flag to force use of rMLST genes for all genera. --cross_details : By default, when ConFindr finds cross-contaminated samples it stops analysis. Activate this flag to have analysis of number of cSNVs continue in order to get an estimate of percentage contamination.","title":"Optional Arguments"}]}